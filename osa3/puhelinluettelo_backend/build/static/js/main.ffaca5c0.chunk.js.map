{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","components/ErrorNotifi.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Person","person","delPerson","name","number","onClick","Persons","persons","newFilter","filter","toLowerCase","includes","map","key","id","Filter","handleFilterChange","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","ErrorNotifi","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","infoMessage","setInfoMessage","useEffect","personService","event","target","preventDefault","some","window","confirm","find","newPers","n","changePers","concat","setTimeout","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffaca5c0.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\n\n\n    return(\n    <form onSubmit={addPerson}>\n        <div>\n        name:  \n        <input \n            value={newName}\n            onChange={handleNameChange}\n        />\n        </div>\n        <div>\n            number:\n            <input\n                value={newNumber}\n                onChange={handleNumberChange}\n            />\n        </div>\n        <div>\n        <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({person, delPerson})=>{\n    return(\n    <p>{person.name} {person.number} <button onClick={delPerson}>delete</button> </p>)\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({persons, newFilter, delPerson}) => {\n\n\n    return(\n        <div>\n            {persons\n            .filter(({name}) => name.toLowerCase().includes(newFilter))\n            .map((person) =>\n                <Person \n                key={person.name} \n                person={person}\n                delPerson={()=> delPerson(person.id)}\n                />\n            )}\n        </div>\n    )\n\n}\n\nexport default Persons;","import React from 'react'\n\nconst Filter = ({newFilter, handleFilterChange}) =>{\n\n    return(\n        <form>\n            <div>\n                filter shown with:\n                <input\n                    value={newFilter}\n                    onChange={handleFilterChange}\n                />\n            </div>\n        </form>\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return (\n        axios\n          .get(baseUrl)\n          .then(response => response.data)\n    )\n}\n\nconst create = (newObject, id) => {\n    let request;\n    if(id===-1){\n        request = axios.post(baseUrl, newObject)\n    }else{\n        request = axios.put(`${baseUrl}/${id}`, newObject)\n    }\n    return request.then(response => response.data)\n}\n\nconst delet = id => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll,\n    create,\n    delet\n}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"info\">\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React from 'react'\n\nconst ErrorNotifi = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  export default ErrorNotifi","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm.js'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorNotifi from './components/ErrorNotifi'\n\nconst App = () => {\n\n    \n    const [ persons, setPersons] = useState([]) \n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ newFilter, setNewFilter ] = useState('')\n    const [ errorMessage, setErrorMessage] = useState(null)\n    const [ infoMessage, setInfoMessage] = useState(null)\n\n    //load data from server\n    useEffect(() => {\n        personService\n          .getAll()\n          .then(response => {\n              setPersons(response)\n          })\n    }, [])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value.toLowerCase())\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        //check if person is already included\n        let id = -1\n        if(persons.some(({name}) => newName === name)){\n            if(!window.confirm(`Number for ${newName} already exists, do you want to replace it?`)){\n              return\n            }\n            id = persons.find(({name}) => newName === name).id\n            const newPers = persons.find(n => n.id === id)\n            const changePers = {...newPers, number: newNumber}\n            personService\n              .create(changePers, id)\n            setPersons(persons.filter(n => n.id !== id).concat(changePers))\n            setInfoMessage(`Changed number for ${changePers.name} to ${changePers.number}`)\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => {\n              setInfoMessage(null)}, 2000\n            )\n            return\n        }\n\n        const personObject = {\n            name: newName,\n            number: newNumber\n        }\n\n        personService\n          .create(personObject, id)\n          .then((response) => {\n            setPersons(persons.concat(response))\n            setInfoMessage(`Added ${newName}`)\n            setNewName('')\n            setNewNumber('')\n            setTimeout(() => {\n              setInfoMessage(null)}, 2000\n            )\n          })\n        \n    }\n    \n    const delPerson = (id) => {\n      const name = persons.find(n => n.id === id).name\n      if(!window.confirm(`Do you really want to remove ${name}?`)){\n        return\n      }\n      personService\n        .delet(id)\n        .then(response =>{\n          setPersons(persons.filter(n => n.id !== id))\n        })\n        .catch(error => {\n          setErrorMessage(`Could not remove person with id ${id}`)\n          setTimeout(() => setErrorMessage(null), 2000)\n        })\n    }\n\n  \n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <Notification message={infoMessage}/>\n        <ErrorNotifi message={errorMessage}/>\n\n        <Filter \n        handleFilterChange={handleFilterChange} \n        newFilter={newFilter}\n        />\n\n        <h3>Add a new</h3>\n\n        <PersonForm \n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newName={newName}\n        newNumber={newNumber}\n        />\n\n        <h3>Numbers</h3>\n\n        <Persons \n        persons={persons} \n        newFilter={newFilter}\n        delPerson={delPerson}\n        />\n\n      </div>\n    )\n  \n  }\n  \n  export default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from'./App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}